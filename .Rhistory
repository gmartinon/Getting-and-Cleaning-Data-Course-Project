head(gdp)
gdp <- read.csv("gdp.csv")
head(gdp)
merge(gdp,cou,by.x="X",by.y="CountryCode")
head(cou)
length(merged)
str(merged)
merged <- merge(gdp,cou,by.x="X",by.y="CountryCode")
length(merged)
intersect(colnames(gdp),colnames(cou))
ls
merged <- merge(gdp,cou,by.x="X",by.y="CountryCode",all=TRUE)
length(merged)
colnames(merged)
merged[["X"]]
merged[["CountryCode"]]
gdp[["X"]]
intersect(gdp[["X"]],cou[["CountryCode"]])
intersect(gdp[["X"]],cou[["CountryCode"]])[13]
names(gdp)
head(gdp)
tail(gdp)
tail(gdp,n=20)
tail(gdp,n=40)
merged[["X"]]
merged[["X.4"]]
sort(desc(merged[["X.4"]]))
sort(merged[["X.4"]])
df <- data.frame(country = merged$X, gdp = merged$X.4)
df
names(df)
arrange(df, gdp)
as.numeric(gdp$X.4)
parse_number(gdp$X.4)
df <- data.frame(country = merged$X, gdp = parse_number(merged$X.4)
)
df
arrange(df,gdp)
ls
sl
ls
head(gdp)
mygdp <- data.fram(countryCode = gdp$X, countryName = gdp$X.3, GDP = parse_number(gdp$X.4))
mygdp <- data.frame(countryCode = gdp$X, countryName = gdp$X.3, GDP = parse_number(gdp$X.4))
mygdp
gdp <- read.csv("gdp.csv")
mygdp <- data.frame(countryCode = gdp$X, countryName = gdp$X.3, GDP = parse_number(gdp$X.4))
mygdp
gdp
tail(gdp, n = 25)
mygdp
mygdp <- mygdp[1:190,]
mygdp
mygdp <- arrange(mygdp,GDP)
mygdp
mygdp <- arrange(mygdp,desc(GDP)
)
head(mygdp)
mygdp <- arrange(mygdp,desc(GDP))
mygdp
mygdp <- arrange(mygdp,GDP)
mygdp
mygdp <- data.frame(countryCode = gdp$X, countryName = gdp$X.3, GDP = parse_number(gdp$X.4))
mygdp
cou
cou[["CountryCode"]]
gdp
mygdp
cou[["CountryCode"]]
intersect(mygdp$gdp, cou$CountryCode)
intersect(mygdp$countryCode, cou$CountryCode)
gdp <- read.csv("gdp.csv")
mygdp <- data.frame(countryCode = gdp$X, countryName = gdp$X.3, GDP = parse_number(gdp$X.4))
head(mygdp)
intersect(mygdp$countryCode, cou$CountryCode)
length(intersect(mygdp$countryCode, cou$CountryCode))
length(intersect(gdp$X, cou$CountryCode))
length(unique(intersect(gdp$X, cou$CountryCode)))
mygdp
head(gdp)
head(gdp, n= 20)
ls
mygdp <- data.frame(countryCode = gdp$X, countryName = gdp$X.2, GDP = parse_number(gdp$X.3))
mygdp
length(intersect(gdp$X, cou$CountryCode))
ls
head(cou)
mycou <- data.frame(countryCode = cou$CountryCode)
mycou
m <- merge(mygdp,mycou,by.x="countryCode",by.y="countryCode")
m
arrange(m,gdp)
head(m)
arrange(m,GDP)
mygdp
mygdp <- mygdp[!is.na(mygdp$GDP)]
mygdp <- mygdp[!is.na(mygdp$GDP),]
mygdp
tail(mygdp,n=10)
tail(mygdp,n=200)
tail(mygdp,n=20)
tail(mygdp,n=15)
mygdp <- mygdp[1:length(mygdp$GDP) - 14,]
mygdp <- mygdp[1:(length(mygdp$GDP) - 14),]
mygdp
m <- merge(mygdp,mycou,by.x="countryCode",by.y="countryCode")
m
arrange(m,GDP)
head(m,13)
m <- arrange(m,GDP)
head(m,13)
length(m$GDP)
setwd("~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3")
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
gdp
head(gdp)
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
tail(gdp)
tail(gdp,n=50)
tail(gdp,n=200)
tail(gdp,n=100)
tail(gdp[1:nrow(gdp)-100],n=100)
tail(gdp[1:(nrow(gdp)-100)],n=100)
nrow(gdp)
nrow(gdp)-100
1:(nrow(gdp)-100)
tail(gdp[1:(nrow(gdp)-100),],n=100)
tail(gdp[1:(nrow(gdp)-110),],n=100)
tail(gdp[1:(nrow(gdp)-111),],n=100)
head(gdp)
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
nrow(m)
head(arrange(m,GDP),13)
names(m)
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
gdp$GDP
head(gdp)
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
names(m)
colnames(cou)
head(cou)
group_by(m,Income.Group)
summarize(group_by(m,Income.Group))
?group_by
summarize(group_by(m,GDP,Income.Group))
summarize(group_by(m,GDP,Income.Group))
table(group_by(m,GDP,Income.Group))
table(m,GDP,Income.Group)
table(m,m$GDP,m$Income.Group)
?group_by
m2 <- tbl_df(m)
group_by(m2,GDP,Income.Group)
summarise(group_by(m2,GDP,Income.Group))
table(m2,GDP,Income.Group)
g <- group_by(m2,GDP,Income.Group)
summarise(g, mean(gdp)
)
summarize(g, mean(gdp)
)
summarize(g, n()
)
g <- group_by(m2,Income.Group)
g
summarize(g,mean(gdp))
summarize(g,mean(GDP))
g <- group_by(m,Income.Group)
summarize(g,mean(GDP))
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
head(m)
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
head(m)
g$X.1
mean(g$X.1)
mean(g[["X.1"]])
colnames(gdp)
head(gdp)
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
g$GDPrank
as.numeric(g$GDPrank)
mean(as.numeric(g$GDPrank))
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
quantile(g,GDPrank)
quantile(g,g$GDPrank)
quantile(m$GDPrank)
quantile(g$GDPrank)
quantile(m$GDPrank)
quantile(m$GDP)
library(hmisc)
install.packages("hmisc")
install.packages("Hmisc")
?cut
cut(m,quantile(m$GDP))
quantile(m$GDP)
cut(m$Income.Group,quantile(m$GDP))
cut(quantile(m$GDP),m)
cut(quantile(m$GDP),m$Income.Group)
?cut2
cut(m$GDP, breaks = quantile(m$GDP))
cut(m$Income.Group, breaks = quantile(m$GDP))
cut(m$GDPrank, breaks = quantile(m$GDP))
cut(m$GDP, breaks = quantile(m$GDP))
table(cut(m$GDP, breaks = quantile(m$GDP)))
?quantile
table(cut(m$GDP, breaks = quantile(m$GDP, probs = seq(0,1,0.2))))
?table
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
table(m$gdpGroups,m$Income.Group)
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
table(m$gdpGroups,m$Income.Group)
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
swirl()
install.packages("lubridate")
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE
)
this_moment <- now()
this_moment
hour(this_moment)
my_data <- ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, now())
this_moment <- update(this_moment, hours = 14, minutes = 15)
this_moment
?now
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- nyc + hours(15) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia:Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- ymd("June 17, 2008", tz = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?mdy
last_time <- mdy("06172008", tz = "Singapore")
last_time
last_time <- mdy("06/17/2008", tz = "Singapore")
last_time
last_time <- mdy("06/17/2008")
last_time
play()
print(mdy("061708"))
nxt
last_time <- mdy("06/17/08")
last_time
nex()
nxt()
last_time <- mdy("06/17/08")
last_time
last_time <- mdy("06/17/08", tz = "Singapore")
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch)()
stopwatch()
setwd("~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz4")
dat <- read.csv("hid.csv")
str(dat)
names(dat)
?strsplit
strsplit(names(dat),wgtp)
strsplit(names(dat),"wgtp")
strsplit(c("a45", "b45", "c45"), "45")
strsplit(names(dat),"wgtp")[123]
gdp <- read.csv("gdp.csv", skip = 4, stringsAsFactors = FALSE)[1:190,]
colnames(gdp)[5] <- "GDP"
mean(gdp$GDP)
mean(gdp$GDP,na.rm = TRUE)
?mean
gdp$GDP <- parse_number(gdp$GDP)
mean(gdp$GDP,na.rm = TRUE)
colnames(gdp)
head(gdp)
colnames(gdp)[3] <- "name"
head(gdp)
colnames(gdp)[3] <- "X.2"
head(gdp)
colnames(gdp)[4] <- "name"
grep("^Unites", gdp[["name"]])
grep("^United", gdp[["name"]])
gdp$name[99]
gdp <- read.csv("gdp.csv", skip = 4, stringsAsFactors = FALSE)[1:190,]
colnames(gdp)[1] <- "CountryCode"
colnames(gdp)[2] <- "GDPrank"
colnames(gdp)[5] <- "GDP"
colnames(gdp)[4] <- "name"
gdp$name[99]
grep("^United", gdp[["name"]])
gdp <- read.csv("gdp.csv", skip = 4, stringsAsFactors = FALSE)[1:190,]
colnames(gdp)[1] <- "CountryCode"
colnames(gdp)[2] <- "GDPrank"
colnames(gdp)[5] <- "GDP"
colnames(gdp)[4] <- "name"
grep("^United", gdp[["name"]])
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
names(m)
str(m)
m[["Special.Notes"]]
grep(m[["Special.Notes"]],"June")
?grep
grep("June", m[["Special.Notes"]])
grepl("June", m[["Special.Notes"]])
sum(grepl("June", m[["Special.Notes"]]))
grep("June", m[["Special.Notes"]])
length(grep("June", m[["Special.Notes"]]))
grep("June", m[["Special.Notes"]], value = TRUE)
grep("^Fiscal .* June", m[["Special.Notes"]], value = TRUE)
library(quantmod)
install.packages("quantmod")
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/Quizz3/gdp.R')
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
a = 5
a
sampleTimes
year("2010-12-15")
sum(which(year(sampleTimes) == 2012)
)
year(sampleTimes) == 2012
sum(year(sampleTimes) == 2012)
sum(which(year(sampleTimes) == 2012 & wday(sampleTimes) == 1)
)
sum(which(year(sampleTimes) == 2012 & wday(sampleTimes) == 2)
)
sum(which(year(sampleTimes) == 2012 & wday(sampleTimes) == 2))
sum(year(sampleTimes) == 2012 & wday(sampleTimes) == 2)
setwd("~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject")
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
str(testset)
names(testset)
ncol(names)
ncol(testset)
nrow(testset)
?read.csv
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
testset
head(testset)
testset[1:6,1:4]
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
View(testset)
testset[1:6,1:4]
ncol(testset)
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
?read.table
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
is.na(testset)
is.na(testset[1:6,1:6])
ncol(testset)
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
System.time(source("./run_analysis.R"))
Sys.time(source("./run_analysis.R"))
source("./run_analysis.R")
Sys.time({source("./run_analysis.R")})
?Sys.time
system.time({source("./run_analysis.R")})
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
system.time({source("./run_analysis.R")})
system.time({source("./run_analysis.R")})
system.time({source("./run_analysis.R")})
system.time({source("./run_analysis.R")})
?strsplit
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
ncols
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
ncols
firstline
strsplit(firstline, " ")
strsplit(firstline, " ", fixed = TRUE)
length(strsplit(firstline, " ", fixed = TRUE))
strsplit(firstline, " ", fixed = TRUE)
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
?merge
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
ncol(testset)
testset[1:6,1:6]
testset[,1]
testset[1:6,1:6]
testset[1:6,1:20]
testset[1:20,1:6]
testset[,1]
testset[1:25,1]
testset[1:25,1:6]
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
testset[1:25,1:6]
8976/16
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
ncol(testset)
?read.table
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
testset[1:25,1:6]
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R')
features <- read.table("./UCI_HAR_Dataset/features.txt")
features
features[1:6,]
rownames(testset) <- features[,2]
rownames(testset)
colnames(testset) <- features[,2]
testset
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R', echo=TRUE)
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R', echo=TRUE)
testset[1:25,1:6]
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R', echo=TRUE)
summary(dt)
str(dt)
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R', echo=TRUE)
colnames(dt)
grep("mean|std",colnames(dt))
grep("mean|std",colnames(dt),value = TRUE)
grep("mean()|std()",colnames(dt),value = TRUE)
grep("mean\(\)|std\(\)",colnames(dt),value = TRUE)
grep("mean()|std()",colnames(dt),value = TRUE)
grep('mean()|std()',colnames(dt),value = TRUE)
grep('mean\\(\\)|std\\(\\)',colnames(dt),value = TRUE)
dt[,grep('mean\\(\\)|std\\(\\)',colnames(dt),value = TRUE)]
source('~/Data_Science/coursera/Getting_and_Cleaning_Data/CourseProject/run_analysis.R', echo=TRUE)
ncol(dt)
dt[1, grep("std",colnames(dt), value = TRUE)]
grep('mean\\(\\)|std\\(\\)',colnames(dt),value = TRUE)
grep('mean\\(\\)|std\\(\\)',colnames(dt))
dt <- dt[,grep('mean\\(\\)|std\\(\\)',colnames(dt),value = TRUE)]
act <- rbind(read.table("./UCI_HAR_Dataset/test/y_test.txt"),
read.table("./UCI_HAR_Dataset/train/y_train.txt"))
act <- read.table("./UCI_HAR_Dataset/activity_labels.txt")[act[,1],2]
act
dt[["activity"]] <- act
dt[["activity"]]
colnames(dt)
